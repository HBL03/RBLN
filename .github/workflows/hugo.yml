# Hugo 사이트를 빌드하고 GitHub Pages에 배포하는 워크플로우
name: Deploy Hugo site to Pages

on:
  # main 브랜치에 푸시할 때 실행
  push:
    branches:
      - main
  
  # 수동으로 워크플로우 실행 가능
  workflow_dispatch:

# GitHub Pages에 배포하기 위한 권한 설정
permissions:
  contents: read
  pages: write
  id-token: write

# 동시 실행 방지
concurrency:
  group: "pages"
  cancel-in-progress: false

# 기본 쉘 설정
defaults:
  run:
    shell: bash

jobs:
  # 빌드 작업
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.148.2
    steps:
      - name: Hugo 설치
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb

      - name: Go 설치
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: 저장소 체크아웃
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: GitHub Pages 설정
        id: pages
        uses: actions/configure-pages@v5

      - name: Node.js 설치 (필요한 경우)
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Hugo 빌드
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
          HUGO_ENVIRONMENT: production
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"

      - name: 아티팩트 업로드
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  # 배포 작업
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: GitHub Pages에 배포
        id: deployment
        uses: actions/deploy-pages@v4
